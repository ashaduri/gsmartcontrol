

GTKMM Notes:

To transfer an ownership from your local code to a container, use
Gtk::Button* pButton = Gtk::manage(new Gtk::Button("Test"));
container->add(*pButton);
(add() takes an object by reference).
otherwise, you will need to delete() it.

local scope destruction also works if using stack variables.
{
	Gtk::Button aButton;
	// destroyed here
}



--------------------------------------------------------

TODO:

-l defects support? (smartctl 6.6)


Don't rely on smartctl return code (2), parse the output instead.
	This will allow us to show the Info page.
	Need usage cases.
	JSON may fix this.


GTKMM 4.
	GtkFileChooserNative
		scoped_ptr (after GtkFileChooserNative)
	GTK_CHECK_VERSION, GTKMM_CHECK_VERSION
	port rconfig/autosave.h from glib to glibmm.
	local_glibmm.h
	make dpi-aware?

JSON.
	Port the rest to std::regex, get rid of pcre requirement.
		Not sure, we still want to support old-format files.
		Maybe make pcre optional (only for parsing the old format)
		Add TESTS!

Use header-only formatting library:
	For libdebug.
	Instead of string_sprintf.

Use std::from_chars() in string_is_numeric_impl_classic_locale() (gcc 8)

Fix win32 crash.

Detect and link with clang's / gcc's experimental lib, if needed.

Check TODOs

Mark with gettext
	Make sure desktop file is translated.
		Add french translation?
	Win32: Bundle intl.dll and translations with windows distribution.
	Add translations to .spec and .deb
	Win32: Bundle gtk/glib/... translations for languages we support.


Before releasing 2.0.0:
	Test with freebsd and macOS.



Testing:
	If ETA time has elapsed, but it's still only at 10% completion,
		ETA 0 is displayed. Fix.
	Detect running tests on launch (maybe ask the user too? some tests
		may be stuck due to bad firmware, e.g. 3ware/windows).
		This is useful because if an extended test is running, short test will abort.
	If smartctl outputs gibberish while testing, the GUI hangs.


Support RAID for these controllers (supported by smartctl 6.5):
	https://www.smartmontools.org/wiki/Supported_RAID-Controllers

	Adaptec (Windows, Linux using "-d aacraid")
	HighPoint RocketRAID (Linux, FreeBSD (analyze sent info))
	LSI MegaRAID (Linux, FreeBSD)
	3ware (FreeBSD)
	Areca (FreeBSD)
	HP CCISS (FreeBSD)


