

GTKMM Notes:

To transfer an ownership from your local code to a container, use
Gtk::Button* pButton = Gtk::manage(new Gtk::Button("Test"));
container->add(*pButton);
(add() takes an object by reference).
otherwise, you will need to delete() it.

local scope destruction also works if using stack variables.
{
	Gtk::Button aButton;
	// destroyed here
}



--------------------------------------------------------

TODO:

-l defects support? (smartctl 6.6)


Don't rely on smartctl return code (2), parse the output instead.
	This will allow us to show the Info page.
	Need usage cases.
	JSON may fix this.


GTKMM 4.
	scoped_ptr (after we have GtkFileChooserNative in gtkmm)
	GTK_CHECK_VERSION, GTK_CHECK_VERSION
	port rconfig/autosave.h from glib to glibmm.
	local_glibmm.h

JSON.
	Port the rest to std::regex, get rid of pcre requirement.
		Not sure, we still want to support old-format files.
		Maybe make pcre optional (only for parsing the old format)

Port to std::filesystem (gcc 8; mingw not yet supported).
	remove wcmatch (once fs is gone) (and its LICENSE_bsd-ucb.txt)
	remove i18n.h
	Can use experimental/filesystem (no fstream support yet).

Use std::from_chars() in string_is_numeric_impl_classic_locale() (gcc 8)


std::string setters -> no const&, use std::move.
	same for std::vector
switch -> static const std::map
for iter -> for auto
push_back -> static vector
Should StorageProperty contain also value_uinteger?

Check TODOs

Test with clang-tidy





Testing:
	If ETA time has elapsed, but it's still only at 10% completion,
		ETA 0 is displayed. Fix.
	Detect running tests on launch (maybe ask the user too? some tests
		may be stuck due to bad firmware, e.g. 3ware/windows).
	If smartctl outputs gibberish while testing, the GUI hangs.


Support RAID for these controllers (supported by smartctl 6.5):
	https://www.smartmontools.org/wiki/Supported_RAID-Controllers

	Adaptec (Windows, Linux using "-d aacraid")
	HighPoint RocketRAID (Linux, FreeBSD (analyze sent info))
	LSI MegaRAID (Linux, FreeBSD)
	3ware (FreeBSD)
	Areca (FreeBSD)
	HP CCISS (FreeBSD)


