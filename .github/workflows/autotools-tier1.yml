name: Build - 1.1 Branch (Tier 1 platforms)

on:
  # Triggers the workflow on push or pull request events but only for the branch
  push:
    branches: [ release/1.1 ]
  pull_request:
    branches: [ release/1.1 ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


env:
  SMARTMONTOOLS_INSTALLER: smartmontools-7.2-1.win32-setup.exe
  SMARTMONTOOLS_URL: https://nav.dl.sourceforge.net/project/smartmontools/smartmontools/7.2/smartmontools-7.2-1.win32-setup.exe


jobs:

  linux-ubuntu:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        ref: release/1.1

    - name: Install Dependencies
      run: sudo apt-get install libpcre3-dev libgtkmm-3.0-dev gettext autoconf automake

    - name: Run Autogen
      shell: bash
      working-directory: ${{runner.workspace}}/gsmartcontrol
      run: ./autogen.sh

    - name: Create Build Directory
      shell: bash
      run: mkdir -p ${{runner.workspace}}/build

    - name: Configure
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: >
        $GITHUB_WORKSPACE/configure --prefix=/usr --enable-tests

    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: make

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: make check

    - name: Pack Source
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: make dist

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Source Packages (1.1 Branch)
        path: ${{runner.workspace}}/build/gsmartcontrol-*.tar.bz2


  windows-msys2:
    # Disable for now, as the configure stage errors out with "The directory name is invalid."
    if: ${{ false }}

    runs-on: windows-latest
    strategy:
      matrix:
        include: [
          { msystem: MINGW64, arch: x86_64, root: /mingw64 },
          { msystem: MINGW32, arch: i686, root: /mingw32 }
        ]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: release/1.1

      - uses: msys2/setup-msys2@v2
        # p7zip is needed to extract smartmontools
        # fontconfig owns /etc/fonts
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: >-
            mingw-w64-${{ matrix.arch }}-gtkmm3
            mingw-w64-${{ matrix.arch }}-pkg-config
            autoconf
            automake
            mingw-w64-${{ matrix.arch }}-gcc
            mingw-w64-${{ matrix.arch }}-fontconfig
            make
            p7zip

      - name: Run Autogen
        shell: msys2 {0}
        working-directory: ${{runner.workspace}}/gsmartcontrol
        run: ./autogen.sh

      - name: Create Build Directory
        shell: cmd
        working-directory: ${{runner.workspace}}
        run: md build

      - name: Configure
        shell: msys2 {0}
        working-directory: ${{runner.workspace}}/build
        run: ../gsmartcontrol/configure --enable-tests

      - name: Build
        shell: msys2 {0}
        working-directory: ${{runner.workspace}}/build
        run: make

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: msys2 {0}
        run: make check

      - name: Download Package Requirements
        shell: msys2 {0}
        working-directory: ${{runner.workspace}}/build
        run: |
          mkdir smartmontools
          cd smartmontools
          wget $SMARTMONTOOLS_URL

      - name: Extract Package Requirements (64-bit)
        if: ${{ matrix.msystem == 'MINGW64' }}
        shell: msys2 {0}
        working-directory: ${{runner.workspace}}/build/smartmontools
        run: >
          7z -bb1 e $SMARTMONTOOLS_INSTALLER
          bin64/smartctl.exe
          bin64/smartctl-nc.exe
          bin/update-smart-drivedb.exe
          bin/drivedb.h

      - name: Extract Package Requirements (32-bit)
        if: ${{ matrix.msystem == 'MINGW32' }}
        shell: msys2 {0}
        working-directory: ${{runner.workspace}}/build/smartmontools
        run: >
          7z -bb1 e $SMARTMONTOOLS_INSTALLER
          bin/smartctl.exe
          bin/smartctl-nc.exe
          bin/update-smart-drivedb.exe
          bin/drivedb.h

      - name: Package ZIP
        shell: msys2 {0}
        working-directory: ${{runner.workspace}}/build
        run: make win-zip-dist

      - name: Package NSIS
        shell: msys2 {0}
        working-directory: ${{runner.workspace}}/build
        run: make win-dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Windows Packages (1.1 Branch)
          path: ${{runner.workspace}}/build/gsmartcontrol-*-win*.*

